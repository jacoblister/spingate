init("0100000000000")

Z = bit(0, "0")
T = bit(1, "T")
A = bit(10, "A")
B = bit(11, "B")
X = bit(12, "X")

toggle = (dst) => nand(dst, dst)
set = (dst) => nand(Z, dst)
clear = (dst) => set(dst) + nand(dst, dst)
copy = (src, dst) => set(dst) + nand(src, dst) + nand(dst, dst)
swap = (src, dst, tmp) => copy(src, tmp) + copy(dst, src) + copy(tmp, dst)
and = (src, dst) => nand(src, dst) + nand(dst, dst)
or = (src, dst) => toggle(dst) + toggle(src) + nand(src, dst) + nand(dst, dst) + toggle(dst) + toggle(src)
xor = (src, dst, tmpA) => copy(src, tmpA) + nand(dst, tmpA) + nand(tmpA, dst) + nand(src, tmpA) + nand(tmpA, dst)

prog("A=!A", nand(A, A))
prog("B=!B", nand(B, B))
prog("X=0", clear(X))
prog("X=1", set(X))
prog("X=A", copy(A, X))
prog("A<=>B", swap(A, B, T))
prog("X=A&B", copy(A, X) + and(B, X))
prog("X=A|B", copy(A, X) + or(B, X))
prog("X=A^B", copy(A, X) + xor(B, X, T))
